---
// Content for the "Featured Works" section
import { allProjectsData, type ProjectDataItem } from "../../../data/projectsData"; // Adjusted path, import type

// Simple selection: take the first 3 projects.
// TODO: Implement better selection logic later (e.g., based on an `isFeatured: true` flag you add to the data)
const featuredProjects: ProjectDataItem[] = allProjectsData.slice(0, 3);

const projectsUrl = "/projects";

// Helper to generate refined summaries for the homepage
function getHomepageSummary(project: ProjectDataItem): string {
  switch (project.title) {
    case "uniOS":
      return "An operating system pilot course project focused on core kernel concepts. Co-developed the graphics system, implementing features like alpha blending and a basic GUI toolkit.";
    case "zheyucao.com (This Website)":
      return "This personal portfolio site, built with Astro and TypeScript. Features responsive design, smooth transitions, and showcases my projects, timeline, and resume.";
    case "Angine Sans":
      return "An open-source sans-serif typeface derived from Noto Sans, designed for personal branding and shared under the SIL Open Font License.";
    default:
      // Fallback: extract first paragraph
      return (
        project.description?.split("</p>")[0].replace("<p>", "").trim() || "No summary available."
      );
  }
}
---

<h2 slot="title" class="about-title scroll-target-title">Featured Works</h2>

<div class="about-content scroll-target-content">
  <ul class="featured-works-list">
    {
      featuredProjects.map((project) => (
        <li class="featured-work-item">
          <h3>{project.title}</h3>
          {/* Use the helper function to get refined summary */}
          <p class="work-description">{getHomepageSummary(project)}</p>
          {project.techStack && (
            <p class="tech-stack">
              <em>Tech Stack: {project.techStack.join(", ")}</em>
            </p>
          )}
          <div class="work-links">
            {project.githubUrl && (
              <a href={project.githubUrl} target="_blank" rel="noopener noreferrer">
                GitHub
              </a>
            )}
            {project.projectUrl && (
              <a href={project.projectUrl} target="_blank" rel="noopener noreferrer">
                Live Demo
              </a>
            )}
          </div>
        </li>
      ))
    }
  </ul>
  <a href={projectsUrl} class="cta-link">View All Projects &rarr;</a>
  {
    /* Add specific styles for .featured-works-list, .featured-work-item, etc. here if needed,
      or define them globally in SectionWrapper with :global() */
  }
</div>
